{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","displayName","onChange","e","target","preventDefault","console","log","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6e4cce2.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBsvpymCArDFncOVFHp_3cUsNaHR8ceGjY\",\r\n    authDomain: \"chatter-111n.firebaseapp.com\",\r\n    projectId: \"chatter-111n\",\r\n    storageBucket: \"chatter-111n.appspot.com\",\r\n    messagingSenderId: \"298396011302\",\r\n    appId: \"1:298396011302:web:3fce9ff2bf06cfb6998fe7\",\r\n    measurementId: \"G-Z3MPTH5GND\"\r\n  };\r\n\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export { auth, provider };\r\n  export default db;","import { Avatar } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react';\r\nimport db from './firebase';\r\nimport \"./SidebarChat.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n\r\n    const [seed, setSeed] = useState('');\r\n    const [messages, setMessages] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n    if (id) {\r\n        db.collection('rooms').doc(id).collection('messages').orderBy('timestamp', 'desc').onSnapshot(snapshot =>\r\n            setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            )\r\n    }\r\n}, [id])\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random()*5000));\r\n\r\n    }, []);\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please enter name for chat room\");\r\n\r\n        if (roomName) {\r\n            // do some clever database stuff...\r\n            db.collection('rooms').add({\r\n                name: roomName,\r\n            })\r\n        }\r\n    };\r\n\r\n    return !addNewChat ? (\r\n        <Link to ={`/rooms/${id}`}>\r\n        <div className=\"sidebarChat\">\r\n            <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n            <div className=\"sidebarChat__info\">\r\n                <h2>{ name }</h2>\r\n                <p>{messages[0]?.message}</p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    ): (\r\n        <div onClick={createChat} className=\"sidebarChat\">\r\n            <h2>Add new chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, { createContext, useContext,useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, { useEffect, useState } from 'react'\r\nimport \"./Sidebar.css\"\r\nimport { Avatar, IconButton } from \"@material-ui/core\"\r\nimport  DonutLargeIcon  from \"@material-ui/icons/DonutLarge\"\r\nimport  ChatIcon  from \"@material-ui/icons/Chat\"\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchOutlined from '@material-ui/icons/SearchOutlined'\r\nimport SidebarChat from './SidebarChat'\r\nimport db from './firebase'\r\nimport { useStateValue } from './StateProvider'\r\n\r\n\r\n\r\nfunction Sidebar() {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n         \r\n        const unsubscribe = db.collection('rooms').onSnapshot(snapshot => (\r\n                setRooms(snapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        data: doc.data()\r\n                    }))\r\n                    )\r\n            )\r\n        );\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <Avatar src={user?.photoURL}/>\r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton>\r\n                    <DonutLargeIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                    <ChatIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                    <MoreVertIcon />\r\n                    </IconButton>\r\n                            \r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input placeholder=\"Search or start new chat\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__chats\">\r\n                <SidebarChat addNewChat />\r\n                {rooms.map(room => (\r\n                    <SidebarChat key={room.id} id={room.id}\r\n                    name={room.data.name} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useState } from 'react'\r\nimport \"./Chat.css\"\r\nimport { Avatar, IconButton } from \"@material-ui/core\"\r\nimport SearchOutlined from '@material-ui/icons/SearchOutlined';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AttachFile from '@material-ui/icons/AttachFile';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { useParams } from 'react-router-dom';\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from \"firebase\";\r\n\r\n\r\nfunction Chat() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setSeed] = useState('');\r\n\r\n    const { roomId } = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection(\"rooms\").doc(roomId).onSnapshot((snapshot) => \r\n                setRoomName(snapshot.data().name));\r\n\r\n            db.collection('rooms').doc(roomId).collection(\"messages\").orderBy('timestamp', 'asc').onSnapshot((snapshot) => \r\n                    setMessages(snapshot.docs.map((doc) => doc.data())));\r\n        }\r\n    }, [roomId]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random()*5000));\r\n\r\n    }, []);\r\n\r\n\r\n    const sendMessage =(e) => {\r\n        e.preventDefault();\r\n        console.log(\"you typed >>>\", input)\r\n\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n\r\n        setInput(\"\");\r\n    };\r\n    \r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>last seen{\"\"}\r\n                    {new Date(\r\n                        messages[messages.length - 1]?.timestamp?.toDate()).toUTCString()\r\n                    }\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                    <SearchOutlined />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                    <AttachFile />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                    <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat__body\">\r\n                {messages.map((message) => (\r\n                     <p className={`chat__message ${message.name === user.displayName &&\r\n                        \"chat__reciever\"}`}>\r\n                        <span className=\"chat__name\">{message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"chat__timestamp\">\r\n                            {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                        </span>\r\n                        </p>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"chat__footer\">\r\n                <InsertEmoticonIcon />\r\n                <form>\r\n                    <input value={input} onChange={(e) => setInput(e.target.value)}\r\n                    placeholder=\"Type a message\" type=\"text\" />\r\n                    <button onClick={sendMessage} type=\"submit\">Send a message</button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","export const initialState = {\r\n    user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n\r\n            default:\r\n                return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { auth, provider } from './firebase'\r\nimport \"./Login.css\"\r\nimport { actionTypes } from './reducer'\r\nimport { useStateValue } from './StateProvider'\r\n\r\nfunction Login() {\r\n\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider).then(result =>{\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: result.user,\r\n            })\r\n        }).catch((error) => alert(error.message));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img src=\"https://th.bing.com/th/id/Rdc0d3ad682ab29fda1face34ac066199?rik=of806rJrzgwaWg&riu=http%3a%2f%2fwww.newdesignfile.com%2fpostpic%2f2014%2f03%2fimessage-icon_27015.png&ehk=HhT64XTxfFiTiekQ8Fbfg%2bB262w9SHFMl%2fODkN%2bD48E%3d&risl=&pid=ImgRaw\" alt=\"\"/>\r\n                <div className=\"login__text\">\r\n                    <h1>Sign in to Chatter</h1>\r\n                </div>\r\n\r\n                <Button onClick={signIn}>\r\n                    Sign In with Google\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import { React, useState } from \"react\";\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport{ BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { useStateValue } from \"./StateProvider\";\n\n\nfunction App() {\n\n  const [{user}, dispatch] = useStateValue();\n  // const [user, newUser] = useState();\n\n  return (\n    //BEM naming convention\n    <div className=\"app\">\n\n      {!user ? (\n        <Login />\n      ):(\n        <div className=\"app__body\">\n        <Router>\n\n          <Switch>\n          \n\n            <Route path=\"/rooms/:roomId\">\n            <Sidebar />\n              <Chat />\n            </Route>\n\n            <Route path=\"/\">\n            <Sidebar />\n            </Route>\n          </Switch>\n\n        </Router>\n        \n      </div>\n      )}\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, { initialState } from './reducer';\nimport { StateProvider } from './StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}